# main out-of-nix hyprland config (for now). sourced by my hyprland-settings/default.nix via out-of-store symlinks


#                                    !!VARIABLES!!                                   #
# ---------------------------------------------------------------------------------- #
#                                    !!VARIABLES!!                                   #

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = Super_L                    # Sets "Windows" key as main modifier

$screenshot_dir = /home/liz/Pictures/Screenshots

$terminal = $pkg_kitty
$fileManager = GTK_THEME=$gtk_theme_name $pkg_nautilus
$browser = $pkg_firefox
$menu = pkill rofi || $pkg_rofi -show drun
$textedit = $pkg_sublime4
$notes = $pkg_obsidian
$pkg_discord = discord # TODO FIX, THIS IS TEMP

#                                    !!MONITORS!!                                   #
# --------------------------------------------------------------------------------- #
#                                    !!MONITORS!!                                   #

# See https://wiki.hyprland.org/Configuring/Monitors/
# monitor=,preferred,auto,auto
# run `hyprctl monitors all` to see all your monitors!!!

monitor = eDP-1, 1920x1080@60, 0x0, 1
monitor = DP-3, 1920x1080@60, 1920x0, 1
monitor = DP-1, 1920x1080@60, 1920x0, 1


#                                    !!AUTOSTART!!                                   #
# ---------------------------------------------------------------------------------- #
#                                    !!AUTOSTART!!                                   #

# Autostart necessary processes (like notifications daemons, status bars, etc.)
# Or execute your favorite apps at launch like this:

# the follow desktop services are started by home-manager, rather than hyprland:
# - swaync
# - hypridle
# - hyprsunset
# - udiskie
# - polkit_gnome
# - hyprpaper

# TODO systemd services instead??
exec-once = $pkg_xwaylandvideobridge &s
exec-once = $pkg_hyprsunset
# exec-once = $pkg_waypaper --restore
# exec-once = $pkg_network_manager_applet
exec-once = $pkg_wl_clip_persist --clipboard regular
exec-once = wl-paste --type text --watch cliphist store # Stores only text data
exec-once = wl-paste --type image --watch cliphist store # Stores only image data
# enable auto-rotate
exec-once = iio-hyprland


# personal apps
exec-once = [workspace 2 silent] $pkg_discord
exec-once = [workspace 1 silent] $browser


#                                    !!ENV!!                                      #
# ------------------------------------------------------------------------------- #
#                                    !!ENV!!                                      #

# See https://wiki.hyprland.org/Configuring/Environment-variables/
#   (as such, these are in uwsm-env-hyprland)


#                                    !!PERMISSIONS!!                                      #
# ---------------------------------------------======------------------------------------ #
#                                    !!PERMISSIONS!!                                      #

# See https://wiki.hyprland.org/Configuring/Permissions/
# Please note permission changes here require a Hyprland restart and are not applied on-the-fly
# for security reasons

# TODO mess with this stuff
# ecosystem {
#   enforce_permissions = 1
# }

# permission = /usr/(bin|local/bin)/grim, screencopy, allow
# permission = /usr/(lib|libexec|lib64)/xdg-desktop-portal-hyprland, screencopy, allow
# permission = /usr/(bin|local/bin)/hyprpm, plugin, allow


#                                    !!DESIGN!!                                     #
# --------------------------------------------------------------------------------- #
#                                    !!DESIGN!!                                     #

# Refer to https://wiki.hyprland.org/Configuring/Variables/

# https://wiki.hyprland.org/Configuring/Variables/#general


# https://wiki.hyprland.org/Configuring/Variables/#animations
animations {
    enabled = yes

    # Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = easeOutQuint,0.23,1,0.32,1
    bezier = easeInOutCubic,0.65,0.05,0.36,1
    bezier = linear,0,0,1,1
    bezier = almostLinear,0.5,0.5,0.75,1.0
    bezier = quick,0.15,0,0.1,1

    animation = windowsIn, 1, 1.5, easeOutQuint, slide
    animation = windowsOut, 1, 1.5, easeOutQuint, slide
    animation = windowsMove, 1, 1.5, easeOutQuint

    animation = fadeIn, 1, 1.0, almostLinear
    animation = fadeOut, 1, 0.8, almostLinear
    animation = fade, 1, 2.5, quick
    animation = layers, 0
    animation = fadeLayersIn, 1, 1.5, almostLinear
    animation = fadeLayersOut, 1, 1, almostLinear

    animation = workspacesIn, 1, 0.81, almostLinear, slidefade 20%
    animation = workspacesOut, 1, 1.29, almostLinear, slidefade 20%
    animation = specialWorkspaceIn, 1, 0.8, almostLinear, slidefadevert 20%
    animation = specialWorkspaceOut, 1, 0.5, almostLinear, slidefadevert 20%

    animation = zoomFactor, 1, 1.5, almostLinear

    # window focus switch
    animation = border, 1, 2, almostLinear
    animation = fadeSwitch, 1, 2, almostLinear
    animation = fadeShadow, 1, 2, almostLinear
    animation = fadeDim, 1, 2, almostLinear
}

# animations {
#     enabled = false
# }


# The gaps between windows, as well as border colors.
# proportional to the taskbar values.
general {
    # Inner and Outer gaps between windows.
    gaps_in = 2
    gaps_out = 2

    border_size = 1

    # Border colors.
    col.active_border = $pink
    col.inactive_border = $lavender
    col.nogroup_border_active = $red
    col.nogroup_border = $rosewater

    # Set to true enable resizing windows by clicking and dragging on borders and gaps
    resize_on_border = true

    layout = dwindle

    # READ https://wiki.hyprland.org/Configuring/Tearing/ BEFORE TURNING ON!
    allow_tearing = false
}

group {
    col.border_active = $pink
    col.border_inactive = $lavender
    col.border_locked_active = $red
    col.border_locked_inactive = $rosewater

    groupbar {
        height = 1 # must be > 0 for text to render
        indicator_height = 20
        text_offset = -12
        font_size = 10
        rounding = 10
        round_only_edges = false
        text_color = $crust
        text_color_inactive = $crust
        font_weight_active = semibold
        font_weight_inactive = medium
        col.active = $pink
        col.inactive = $lavender
        col.locked_active = $red
        col.locked_inactive = $rosewater
        keep_upper_gap = false
        gaps_out = 2
        gaps_in = 2
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#decoration
decoration {
    rounding = 6

    active_opacity = 1.0
    inactive_opacity = 0.95

    # Window Shadow
    shadow:enabled = true
    shadow:range = 16
    shadow:render_power = 5
    shadow:color = rgba(0,0,0,0.2)

    # Transparent Window Blur
    blur {
        enabled = true
        new_optimizations = true
        size = 2
        passes = 3
        vibrancy = 0.1696
    }
}

# Ref https://wiki.hyprland.org/Configuring/Workspace-Rules/
# "Smart gaps" / "No gaps when only"
# uncomment all if you wish to use that.
# workspace = w[tv1], gapsout:0, gapsin:0
# workspace = f[1], gapsout:0, gapsin:0
# windowrule = bordersize 0, floating:0, onworkspace:w[tv1]
# windowrule = rounding 0, floating:0, onworkspace:w[tv1]
# windowrule = bordersize 0, floating:0, onworkspace:f[1]
# windowrule = rounding 0, floating:0, onworkspace:f[1]

# See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
}

# See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
master {
    new_status = master
}

# https://wiki.hyprland.org/Configuring/Variables/#misc
misc {
    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = true # If true disables the random hyprland logo / anime girl background. 
    focus_on_activate = true
}

xwayland {
    force_zero_scaling = true
}


#                                    !!INPUT!!                                     #
# -------------------------------------------------------------------------------- #
#                                    !!INPUT!!                                     #

# https://wiki.hyprland.org/Configuring/Variables/#input
input {
    kb_layout = us
    kb_variant =
    kb_model =
    # remaps caps to backspace, both shifts together to caps
    kb_options = shift:both_capslock,caps:backspace
    kb_rules =

    accel_profile = adaptive

    follow_mouse = 2
    float_switch_override_focus = 0

    sensitivity = 0.15 # -1.0 - 1.0, 0 means no modification.

    touchpad {
        natural_scroll = false
        disable_while_typing = false
        tap-to-click = true;
        clickfinger_behavior = true;
    }
}

misc {
    layers_hog_keyboard_focus = false
}

# https://wiki.hyprland.org/Configuring/Variables/#gestures
gestures {
    workspace_swipe = true
    workspace_swipe_forever = true
    workspace_swipe_invert = false
    workspace_swipe_distance = 400
    workspace_swipe_cancel_ratio = 0.15
    workspace_swipe_min_speed_to_force = 10
}

# this supposedly fixes a few bugs
cursor {
    no_hardware_cursors = true
}

plugin {
    dynamic-cursors {

        # enables the plugin
        enabled = true

        # sets the cursor behaviour, supports these values:
        # tilt    - tilt the cursor based on x-velocity
        # rotate  - rotate the cursor based on movement direction
        # stretch - stretch the cursor shape based on direction and velocity
        # none    - do not change the cursors behaviour
        mode = tilt

        # minimum angle difference in degrees after which the shape is changed
        # smaller values are smoother, but more expensive for hw cursors
        threshold = 2

        # override the mode behaviour per shape
        # this is a keyword and can be repeated many times
        # by default, there are no rules added
        # see the dedicated `shape rules` section below!
        shaperule = clientside, none

        # for mode = tilt
        tilt {

            # controls how powerful the tilt is, the lower, the more power
            # this value controls at which speed (px/s) the full tilt is reached
            # the full tilt being 60° in both directions
            limit = 5000

            # relationship between speed and tilt, supports these values:
            # linear             - a linear function is used
            # quadratic          - a quadratic function is used (most realistic to actual air drag)
            # negative_quadratic - negative version of the quadratic one, feels more aggressive
            # see `activation` in `src/mode/utils.cpp` for how exactly the calculation is done
            function = negative_quadratic

            # time window (ms) over which the speed is calculated
            # higher values will make slow motions smoother but more delayed
            window = 100
        }

        shake {
            enabled = false
        }
    }

    touch_gestures {
        # The default sensitivity is probably too low on tablet screens,
        # I recommend turning it up to 4.0
        sensitivity = 4.0

        workspace_swipe_fingers = 3

        long_press_delay = 400

        # resize windows by long-pressing on window borders and gaps.
        # If general:resize_on_border is enabled, general:extend_border_grab_area is used for floating
        # windows
        resize_on_border_long_press = true

        # in pixels, the distance from the edge that is considered an edge
        edge_margin = 10
    }
    # long 2 finger press to move window, long 3 finger press to resize window
    hyprgrass-bindm = , longpress:2, movewindow
    hyprgrass-bindm = , longpress:3, resizewindow

    # switch through group tabs
    hyprgrass-bind = , edge:r:l, changegroupactive, f
    hyprgrass-bind = , edge:l:r, changegroupactive, b
    
    # TODO more touchscreen bindings
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more
# device {
#     name = epic-mouse-v1
#     sensitivity = -0.5
# }


#                                    !!KEYBINDS!!                                   #
# --------------------------------------------------------------------------------- #
#                                    !!KEYBINDS!!                                   #

# see https://wiki.hyprland.org/Configuring/Binds/ for more
 # kill current focused app
binds = $mainMod, Q, killactive,
binds = $mainMod&Shift_L, Q, forcekillactive,
# toggle app launcher
binds = $mainMod, W, exec, pkill rofi || $pkg_window_search
binds = $mainMod, D, exec, $menu
bind = $mainMod, Super_L, exec, pkill rofi
# notification panel
binds = $mainMod, O, exec, hyprpanel t notificationsmenu
# exit hyprland (terminate command to be used for uwsm from the arch wiki)
binds = $mainMod&Shift_L, M, exec, loginctl terminate-user ""
# toggle fullscreen
binds = $mainMod, F, fullscreen
# toggle focused window between floating/tiled
bind = $mainMod, SPACE, togglefloating
# pin floating window
bind = $mainMod SHIFT, SPACE, pin
# lock screen
bind = $mainMod SHIFT, L, exec, hyprlock
# screenshot stuff
bindr = , Print, exec, $pkg_hyprshot --freeze --mode region --output-folder $screenshot_dir
bindr = Shift, Print, exec, $pkg_hyprshot --freeze --mode window --output-folder $screenshot_dir
bindr = Ctrl, Print, exec, $pkg_hyprshot --freeze --mode output --output-folder $screenshot_dir
# open last screenshot (since hyprshot notification doesn't let me do that?)
bindr = $mainMod, Print, exec, $open_last_screenshot $screenshot_dir

# clipboard history
bind = $mainMod, Period, exec, pkill rofi || cliphist list | rofi -dmenu -i -p "Select clipboard entry:" | cliphist decode | wl-copy
bind = $mainMod SHIFT, Period, exec, cliphist wipe

# emoji picker
bind = $mainMod, Comma, exec, pkill rofimoji || $pkg_rofimoji

# open hyprpanel dashboard
binds = $mainMod&Shift_L, X, exec, hyprpanel t dashboardmenu

# reload hyprpanel
bind = $mainMod ALT SHIFT, W, exec, $reload_hyprpanel
# reload hyprpaper
bind = $mainMod ALT SHIFT, H, exec, $reload_hyprpaper
# swap left/right monitor positions
bind = $mainMod, M, exec, $swap_monitor_positions
binds = $mainMod, P, pseudo, # pseduo mode in dwindle
binds = $mainMod, V, togglesplit, # change split direction in dwindle
binds = $mainMod, X, layoutmsg, swapsplit

# alt tab for workspaces with super + grave
binds = $mainMod, Grave, split:workspace, m+1
binds = $mainMod&Shift_L, Grave, split:workspace, m-1
binds = $mainMod, A&Grave, exec, $linked_monitor_switch +1
binds = $mainMod&Shift_L, A&Grave, exec, $linked_monitor_switch -1
binds = $mainMod&Control_L, Right, split:workspace, m+1
binds = $mainMod&Control_L, Left, split:workspace, m-1
# vim up/down to cycle between workspaces
bind = $mainMod, J, workspace, e+1
bind = $mainMod, K, workspace, e-1

binds = $mainMod&Control_L, A&Right, exec, $linked_monitor_switch +1
binds = $mainMod&Control_L, A&Left, exec, $linked_monitor_switch -1
# alt tab for windows in workspace
bind = ALT, Tab, cyclenext, visible hist prev      
bind = ALT, Tab, bringactivetotop         
bind = ALT SHIFT, Tab, cyclenext, visible hist next
bind = ALT SHIFT, Tab, bringactivetotop 

# swap workspaces between monitors
bind = ALT SHIFT, Left, split:swapactiveworkspaces, current l
bind = ALT SHIFT, Right, split:swapactiveworkspaces, current r
bind = ALT SHIFT, Up, split:swapactiveworkspaces, current u
bind = ALT SHIFT, Down, split:swapactiveworkspaces, current d

# grab windows on invalid workspaces after unplugging monitor
bind = $mainMod, G, split:grabroguewindows

# move windows
binds = $mainMod&Alt_L, Left, movewindow, l
binds = $mainMod&Alt_L, Right, movewindow, r
binds = $mainMod&Alt_L, Up, movewindow, u
binds = $mainMod&Alt_L, Down, movewindow, d

binds = $mainMod&Shift_L, X&Left, split:movetoworkspace, r-1
binds = $mainMod&Shift_L, X&Right, split:movetoworkspace, r+1

# swap windows 
bind = $mainMod SHIFT, left, swapwindow, l
bind = $mainMod SHIFT, right, swapwindow, r
bind = $mainMod SHIFT, up, swapwindow, u
bind = $mainMod SHIFT, down, swapwindow, d

# (binds so it doesn't conflict with other binds)
# Move focus with mainMod + arrow keys
binds = $mainMod, Left, movefocus, l
binds = $mainMod, Right, movefocus, r
binds = $mainMod, Up, movefocus, u
binds = $mainMod, Down, movefocus, d
# basically ctrl+z for windows, with super+z
# also can focus urgent window
bind = $mainMod, z, focusurgentorlast

### group stuff
# Move into/out of groups with Super + Caps + arrow
#   (capslock is rebound to backspace at the udev level)
binds = $mainMod, Backspace&Left, movewindoworgroup, l
binds = $mainMod, Backspace&Right, movewindoworgroup, r
binds = $mainMod, Backspace&Up, movewindoworgroup, u
binds = $mainMod, Backspace&Down, movewindoworgroup, d
binds = $mainMod, Backspace&A, togglegroup, # create group with Super+Caps+A
binds = $mainMod, Backspace&X, moveoutofgroup, # move out of group with Super+Caps+X
binds = $mainMod, Backspace&E, lockactivegroup, toggle # lock group with Super+Caps+E
binds = $mainMod, Backspace&D, denywindowfromgroup, toggle
# super+tab/super+shift+tab to cycle between grouped windows (akin to alt+tab mechanics)
bind = $mainMod, Tab, changegroupactive, f
bind = $mainMod SHIFT, Tab, changegroupactive, b
binds = $mainMod&Control_L, Backspace&Right, changegroupactive, f
binds = $mainMod&Control_L, Backspace&Left, changegroupactive, b
# vim left/right to cycle between grouped windows
bind = $mainMod, L, changegroupactive, f
bind = $mainMod, H, changegroupactive, b
binds = $mainMod, Backspace&1, changegroupactive, 1
binds = $mainMod, Backspace&2, changegroupactive, 2
binds = $mainMod, Backspace&3, changegroupactive, 3
binds = $mainMod, Backspace&4, changegroupactive, 4
binds = $mainMod, Backspace&5, changegroupactive, 5
binds = $mainMod, Backspace&6, changegroupactive, 6
binds = $mainMod, Backspace&7, changegroupactive, 7
binds = $mainMod, Backspace&8, changegroupactive, 8
binds = $mainMod, Backspace&9, changegroupactive, 9
binds = $mainMod, Backspace&0, changegroupactive, 10




### submap for resizing (or moving a floating window)
bind = $mainMod, R, submap, resize
bind = $mainMod SHIFT, R, submap, resize
submap = resize
binde = , right, resizeactive, 10 0
binde = , left, resizeactive, -10 0
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10
binde = $mainMod, right, resizeactive, 10 0
binde = $mainMod, left, resizeactive, -10 0
binde = $mainMod, up, resizeactive, 0 -10
binde = $mainMod, down, resizeactive, 0 10
binde = SHIFT, right, resizeactive, 100 0
binde = SHIFT, left, resizeactive, -100 0
binde = SHIFT, up, resizeactive, 0 -100
binde = SHIFT, down, resizeactive, 0 100
binde = $mainMod SHIFT, right, resizeactive, 100 0
binde = $mainMod SHIFT, left, resizeactive, -100 0
binde = $mainMod SHIFT, up, resizeactive, 0 -100
binde = $mainMod SHIFT, down, resizeactive, 0 100
binde = CTRL, right, moveactive, 10 0
binde = CTRL, left, moveactive, -10 0
binde = CTRL, up, moveactive, 0 -10
binde = CTRL, down, moveactive, 0 10
binde = $mainMod CTRL, right, moveactive, 10 0
binde = $mainMod CTRL, left, moveactive, -10 0
binde = $mainMod CTRL, up, moveactive, 0 -10
binde = $mainMod CTRL, down, moveactive, 0 10
binde = CTRL SHIFT, right, moveactive, 100 0
binde = CTRL SHIFT, left, moveactive, -100 0
binde = CTRL SHIFT, up, moveactive, 0 -100
binde = CTRL SHIFT, down, moveactive, 0 100
binde = $mainMod CTRL SHIFT, right, moveactive, 100 0
binde = $mainMod CTRL SHIFT, left, moveactive, -100 0
binde = $mainMod CTRL SHIFT, up, moveactive, 0 -100
binde = $mainMod CTRL SHIFT, down, moveactive, 0 100
bind = , escape, submap, reset
bindi = , R, submap, reset
submap = reset

# applications
binds = $mainMod, E, exec, $fileManager
bind = $mainMod, T, exec, $terminal
bind = $mainMod SHIFT, T, exec, [float; center 1; size 50% 60%] kitty
bind = CTRL ALT, T, exec, $terminal
bind = $mainMod SHIFT, F, exec, $browser
bind = $mainMod SHIFT, O, exec, $pkg_obsidian
bind = $mainMod SHIFT, D, exec, $pkg_discord

# Switch monitor workspaces with mainMod + [0-9]
binds = $mainMod, 1, split:workspace, 1
binds = $mainMod, 2, split:workspace, 2
binds = $mainMod, 3, split:workspace, 3
binds = $mainMod, 4, split:workspace, 4
binds = $mainMod, 5, split:workspace, 5
binds = $mainMod, 6, split:workspace, 6
binds = $mainMod, 7, split:workspace, 7
binds = $mainMod, 8, split:workspace, 8
binds = $mainMod, 9, split:workspace, 9
binds = $mainMod, 0, split:workspace, 10

# linked monitor workspaces by holding A also
binds = $mainMod, A&1, exec, $linked_monitor_switch 1
binds = $mainMod, A&2, exec, $linked_monitor_switch 2
binds = $mainMod, A&3, exec, $linked_monitor_switch 3
binds = $mainMod, A&4, exec, $linked_monitor_switch 4
binds = $mainMod, A&5, exec, $linked_monitor_switch 5
binds = $mainMod, A&6, exec, $linked_monitor_switch 6
binds = $mainMod, A&7, exec, $linked_monitor_switch 7
binds = $mainMod, A&8, exec, $linked_monitor_switch 8
binds = $mainMod, A&9, exec, $linked_monitor_switch 9
binds = $mainMod, A&0, exec, $linked_monitor_switch 10


# new workspace
bind = $mainMod, N, split:workspace, emptym
# previous workspace
binds = $mainMod&Shift_L, Z, split:workspace, previous_per_monitor

# Move active window to a workspace with mainMod + SHIFT + [0-9]
binds = $mainMod&Shift_L, 1, split:movetoworkspace, 1
binds = $mainMod&Shift_L, 2, split:movetoworkspace, 2
binds = $mainMod&Shift_L, 3, split:movetoworkspace, 3
binds = $mainMod&Shift_L, 4, split:movetoworkspace, 4
binds = $mainMod&Shift_L, 5, split:movetoworkspace, 5
binds = $mainMod&Shift_L, 6, split:movetoworkspace, 6
binds = $mainMod&Shift_L, 7, split:movetoworkspace, 7
binds = $mainMod&Shift_L, 8, split:movetoworkspace, 8
binds = $mainMod&Shift_L, 9, split:movetoworkspace, 9
binds = $mainMod&Shift_L, 0, split:movetoworkspace, 10
# move to new workspace
bind = $mainMod SHIFT, n, split:movetoworkspace, emptym

# Example special workspace (scratchpad)
$specialKey = S
# workspaces for every key (e.g. Super+S+B opens scratchb, Super+S+4 opens scratch4, Super+Shift+S+O moves the active window to specialo)
source = special-workspaces.conf


# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# other media binds
binde = CTRL + $mainMod, up, exec, wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+ && canberra-gtk-play -i audio-volume-change -V 1.0
binde = CTRL + $mainMod, down, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && canberra-gtk-play -i audio-volume-change -V 1.0
# change volume for secondary audio device
binde = CTRL SHIFT $mainMod, up, exec, $set_sink_volume "Maddie" 5%+
binde = CTRL SHIFT $mainMod, down, exec, $set_sink_volume "Maddie" 5%-
bind = CTRL + $mainMod, k, exec, $pkg_playerctl play-pause
bind = CTRL + $mainMod, l, exec, $pkg_playerctl next
bind = CTRL + $mainMod, j, exec, $pkg_playerctl previous

# targeted sink volume controls (example: built-in speakers)
#   adjust substring as needed: "Speaker", "WF-1000XM5", "Earbuds", etc.
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+ && canberra-gtk-play -i audio-volume-change -V 1.0
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && canberra-gtk-play -i audio-volume-change -V 1.0
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, $pkg_brightnessctl -e4 -n2 set 5%+
bindel = ,XF86MonBrightnessDown, exec, $pkg_brightnessctl -e4 -n2 set 5%-
bindl = , XF86AudioNext, exec, $pkg_playerctl next
bindl = , XF86AudioPause, exec, $pkg_playerctl play-pause
bindl = , XF86AudioPlay, exec, $pkg_playerctl play-pause
bindl = , XF86AudioPrev, exec, $pkg_playerctl previous

# zoom

bind = $mainMod CTRL, mouse_down, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '.float * 1.1')
bind = $mainMod CTRL, mouse_up, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '(.float * 0.9) | if . < 1 then 1 else . end')

binde = $mainMod, equal, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '.float * 1.1')
binde = $mainMod, minus, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '(.float * 0.9) | if . < 1 then 1 else . end')
binde = $mainMod, KP_ADD, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '.float * 1.1')
binde = $mainMod, KP_SUBTRACT, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '(.float * 0.9) | if . < 1 then 1 else . end')

bind = $mainMod SHIFT, mouse_up, exec, hyprctl -q keyword cursor:zoom_factor 1
bind = $mainMod SHIFT, mouse_down, exec, hyprctl -q keyword cursor:zoom_factor 1
bind = $mainMod SHIFT, minus, exec, hyprctl -q keyword cursor:zoom_factor 1
bind = $mainMod SHIFT, KP_SUBTRACT, exec, hyprctl -q keyword cursor:zoom_factor 1
bind = $mainMod SHIFT, 0, exec, hyprctl -q keyword cursor:zoom_factor 1

#                                    !!WINDOW RULES!!                               #
# --------------------------------------------------------------------------------- #
#                                    !!WINDOW RULES!!                               #

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

# Add blur to hyprpanel
layerrule = blur, swww-daemon
layerrule = blurpopups, swww-daemon
layerrule = ignorealpha 0.7, swww-daemon
layerrule = blur, notifications-window
layerrule = blurpopups, notifications-window
layerrule = ignorealpha 0.7, notifications-window
layerrule = blur, dashboardmenu
layerrule = blurpopups, dashboardmenu
layerrule = ignorealpha 0.7, dashboardmenu
layerrule = blur, mediamenu
layerrule = blurpopups, mediamenu
layerrule = ignorealpha 0.7, mediamenu
layerrule = blur, audiomenu
layerrule = blurpopups, audiomenu
layerrule = ignorealpha 0.7, audiomenu
layerrule = blur, networkmenu
layerrule = blurpopups, networkmenu
layerrule = ignorealpha 0.7, networkmenu
layerrule = blur, bluetoothmenu
layerrule = blurpopups, bluetoothmenu
layerrule = ignorealpha 0.7, bluetoothmenu
layerrule = blur, energymenu
layerrule = blurpopups, energymenu
layerrule = ignorealpha 0.7, energymenu
layerrule = blur, calendarmenu
layerrule = blurpopups, calendarmenu
layerrule = ignorealpha 0.7, calendarmenu
layerrule = blur, notificationsmenu
layerrule = blurpopups, notificationsmenu
layerrule = ignorealpha 0.7, notificationsmenu
layerrule = blur, settings-dialog
layerrule = blurpopups, settings-dialog
layerrule = ignorealpha 0.7, settings-dialog
layerrule = blur, indicator
layerrule = blurpopups, indicator
layerrule = ignorealpha 0.7, indicator
layerrule = blur, bar-0
layerrule = blurpopups, bar-0
layerrule = ignorealpha 0.7, bar-0
layerrule = blur, bar-1
layerrule = blurpopups, bar-1
layerrule = ignorealpha 0.7, bar-1
layerrule = blur, bar-2
layerrule = blurpopups, bar-2
layerrule = ignorealpha 0.7, bar-2

# add blur to rofi
layerrule = blur, rofi
layerrule = blurpopups, rofi
layerrule = ignorealpha 0.7, rofi

# Ignore maximize requests from apps. You'll probably like this.
windowrule = suppressevent maximize, class:.*

# enable this for a window to prevent it from stealing focus2
# windowrule = suppressevent focusactivate, class:...

# Fix some dragging issues with XWayland
windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

# fix weird visual bug in hyprpanel-settings
windowrule = opaque on,title:^(hyprpanel-settings)$
windowrule = xray on,title:^(hyprpanel-settings)$
# windowrule = noblur,title:^(hyprpanel-settings)$

# Rules
windowrule = float,,class:^(firefox)$,title:^(Picture-in-Picture)$
windowrule = pin,class:^(firefox)$,title:^(Picture-in-Picture)$
windowrule = fullscreen,class:^(org.gnome.Loupe)$
windowrule = float,,class:^(xdg-desktop-portal-gtk)$
windowrule = group,,class:^(syncplay)$
windowrule = float,,class:^(steam)$,title:^(Steam Settings)$
windowrule = float,,class:^(love)$,title:^(Olympus)$
windowrule = float,,class:^(qalculate-gtk)$
windowrule = fullscreen,class:^(Celeste)$

windowrule = opacity 0.9, 0.9,class:^(org.gnome.Nautilus)$
windowrule = opacity 0.93,class:^(code|cursor)$
windowrule = opacity 0.9,class:^(spotify)$
windowrule = opacity 0.9,class:^(syncplay)$
windowrule = opacity 0.9,class:^(jetbrains-.*)$
# windowrule = opacity 0.9,class:^(mpv)$

# jetbrains focus issues fix
windowrulev2 = noinitialfocus,xwayland:1


# Workspaces
# workspace = 1, monitor:eDP-1 
# workspace = 2, monitor:eDP-1
# workspace = 3, monitor:eDP-1

# XWayland video bridge
windowrule = opacity 0.0 override, class:^(xwaylandvideobridge)$
windowrule = noanim, class:^(xwaylandvideobridge)$
windowrule = noinitialfocus, class:^(xwaylandvideobridge)$
windowrule = maxsize 1 1, class:^(xwaylandvideobridge)$
windowrule = noblur, class:^(xwaylandvideobridge)$
windowrule = nofocus, class:^(xwaylandvideobridge)$


# workspace rules

workspace = special:scratchx, on-created-empty:spotify
# run obs with steam
workspace = special:scratcho, on-created-empty:steam steam://rungameid/10538104883888783360